{"version":3,"file":"static/js/332.402996ca.chunk.js","mappings":"6PAGe,SAASA,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,2BACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,WACE,wBAAKI,KACL,oCAAYM,KAAKC,KAAoB,GAAfL,GAAqB,QAC3C,gBACEM,IACEP,EACI,mCAAqCA,EACrCQ,EAENC,MAAM,MACNC,IAAKX,QAXFD,EADC,OAoBnB,C,uJCtBc,SAASa,IAAU,IAAD,EAC/B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAE3C,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,GAAeL,EAApB,CACA,IAAMQ,EAAIR,GAASK,GAFL,mCAOdI,EANiC,CADnB,wCAGd,qGACqBC,EAAAA,EAAAA,GAAY,sBAAD,OAAuBF,GAAK,WAD5D,OACQG,EADR,OAEEP,EAAeO,EAAKC,SAFtB,4CAHc,sBAQf,GAAE,CAACZ,EAAOK,IAWX,OACE,4BACE,kBAAMQ,SAXW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAYF,EAAEG,OAAOC,SAASC,KAAKC,MACpCJ,GAAaA,IAAcX,IAChCD,EAAe,IACfE,EAAcU,GACdjB,EAAgB,CAAEC,MAAOgB,IAC1B,EAIG,WACE,kBAAOK,KAAK,OAAOF,KAAK,OAAOG,YAAY,uBAC3C,mBAAQD,KAAK,SAAb,yBAEClB,EAAYoB,SAAU,SAAC,IAAD,CAAW5C,OAAQwB,MAGjD,C,0DC/BGqB,E,4CAEG,SAAed,EAAtB,iDAAO,OAAP,oBAAO,WAA2Be,EAAKL,GAAhC,oFACLI,EAAcE,EAAAA,EAAAA,YAAAA,SAERC,EAAUC,EAAAA,GAAAA,QAAc,cACxBC,EAAiB,CACrB9C,GAAI4C,EACJG,SAAU,KANP,mBASoBJ,EAAAA,EAAAA,GAAMD,EAAK,CAAED,YAAaA,EAAYO,QAT1D,uBASKC,EATL,EASKA,KACJZ,GAAgC,IAAvBY,EAAKZ,GAAOG,QACvBK,EAAAA,EAAAA,IAAM,qCAAsCC,GAE5CD,EAAAA,GAAAA,QAAA,0BAAyCC,GAbxC,kBAeIG,GAfJ,kCAiBHJ,EAAAA,GAAAA,MAAY,oCAAqCC,GAjB9C,iFATPH,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAyB,CACvBO,OAAQ,mBACRC,cACE,6N","sources":["components/MovieList.js","pages/Movies.js","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport noImg from 'no-poster.webp';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <main>\n      <ul>\n        {movies.map(({ id, title, poster_path, vote_average }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <h3>{title}</h3>\n              <p>rating: {Math.ceil(vote_average * 10) + '%'}</p>\n              <img\n                src={\n                  poster_path\n                    ? 'https://image.tmdb.org/t/p/w500/' + poster_path\n                    : noImg\n                }\n                width=\"10%\"\n                alt={title}\n              />\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n}\n","// import { LoadMore } from 'components/LoadMore';\nimport MovieList from 'components/MovieList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/api';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [queryState, setQueryState] = useState('');\n\n  useEffect(() => {\n    if (!queryState && !query) return;\n    const q = query || queryState;\n    async function getMovies() {\n      const resp = await fetchMovies(`search/movie?query=${q}`, 'results');\n      setFoundMovies(resp.results);\n    }\n    getMovies();\n  }, [query, queryState]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const movieText = e.target.elements.name.value;\n    if (!movieText || movieText === queryState) return;\n    setFoundMovies([]);\n    setQueryState(movieText);\n    setSearchParams({ query: movieText });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"name\" placeholder=\"add movie name...\" />\n        <button type=\"submit\">search</button>\n      </form>\n      {!!foundMovies.length && <MovieList movies={foundMovies} />}\n    </div>\n  );\n}\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers = {\n  accept: 'application/json',\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWEyYjVkODRiMDI5YTNkNmI3ODJjYWI0MDM5NDM2MSIsInN1YiI6IjY1MDBhNjg4ZmZjOWRlMGVkZWQ0NDM3NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DBpPzdh_xDNK2b4lthob9TnOTsJbTHp8xNZgeluLuGQ',\n};\n\nlet cancelToken;\n\nexport async function fetchMovies(str, value) {\n  cancelToken = axios.CancelToken.source();\n\n  const toastId = toast.loading('Loading...');\n  const toastIdOptions = {\n    id: toastId,\n    duration: 3000,\n  };\n  try {\n    const { data } = await axios(str, { cancelToken: cancelToken.token });\n    if (value && data[value].length === 0) {\n      toast('There are no data for your request', toastIdOptions);\n    } else {\n      toast.success(`Ok. We found something!`, toastIdOptions);\n    }\n    return data;\n  } catch (error) {\n    toast.error('Something goes wrong. Reload page', toastIdOptions);\n  }\n}\n"],"names":["MovieList","movies","location","useLocation","map","id","title","poster_path","vote_average","to","state","from","Math","ceil","src","noImg","width","alt","Movies","useSearchParams","searchParams","setSearchParams","query","get","useState","foundMovies","setFoundMovies","queryState","setQueryState","useEffect","q","getMovies","fetchMovies","resp","results","onSubmit","e","preventDefault","movieText","target","elements","name","value","type","placeholder","length","cancelToken","str","axios","toastId","toast","toastIdOptions","duration","token","data","accept","Authorization"],"sourceRoot":""}