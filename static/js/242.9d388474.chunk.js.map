{"version":3,"file":"static/js/242.9d388474.chunk.js","mappings":"sTAKe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAWA,OATAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACwBC,EAAAA,EAAAA,GAAY,UAAD,OAAWN,EAAX,YAA8B,QADjE,OACQO,EADR,OAEEH,EAAQG,EAAQJ,MAFlB,4CADc,uBAAC,WAAD,wBAKdK,EACD,GAAE,CAACR,IAEJS,QAAQC,IAAI,OAAQP,EAAMA,EAAKQ,QAC1BR,EAAKQ,SAGNR,EAAKQ,SACL,wBACGR,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACR,2BACE,wBAAKF,KAEH,gBACEG,IACEF,EAAY,0CAC2BA,GACnCG,EAENC,MAAM,MACNC,IAAKN,KAGT,+BAAOE,OAbAH,EADD,OALS,4CAyB1B,C,0DCjCGQ,E,4CAEG,SAAef,EAAtB,iDAAO,OAAP,oBAAO,WAA2BgB,EAAKC,GAAhC,oFACLF,EAAcG,EAAAA,EAAAA,YAAAA,SAERC,EAAUC,EAAAA,GAAAA,QAAc,cACxBC,EAAiB,CACrBd,GAAIY,EACJG,SAAU,KANP,mBASoBJ,EAAAA,EAAAA,GAAMF,EAAK,CAAED,YAAaA,EAAYQ,QAT1D,uBASKC,EATL,EASKA,KACJP,GAAgC,IAAvBO,EAAKP,GAAOZ,QACvBe,EAAAA,EAAAA,IAAM,qCAAsCC,GAE5CD,EAAAA,GAAAA,QAAA,0BAAyCC,GAbxC,kBAeIG,GAfJ,kCAiBHJ,EAAAA,GAAAA,MAAY,oCAAqCC,GAjB9C,iFATPH,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAyB,CACvBO,OAAQ,mBACRC,cACE,6N","sources":["pages/Cast.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/api';\nimport noImg from 'no-photo.png';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function getCast() {\n      const results = await fetchMovies(`/movie/${movieId}/credits`, 'cast');\n      setCast(results.cast);\n    }\n    getCast();\n  }, [movieId]);\n\n  console.log('cast', cast, cast.length);\n  if (!cast.length) return <p>There is no data.</p>;\n\n  return (\n    !!cast.length && (\n      <ul>\n        {cast.map(({ id, name, profile_path, character }) => (\n          <li key={id}>\n            <h3>{name}</h3>\n            {\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                    : noImg\n                }\n                width=\"10%\"\n                alt={name}\n              />\n            }\n            <p>as {character}</p>\n          </li>\n        ))}\n      </ul>\n    )\n  );\n}\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers = {\n  accept: 'application/json',\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWEyYjVkODRiMDI5YTNkNmI3ODJjYWI0MDM5NDM2MSIsInN1YiI6IjY1MDBhNjg4ZmZjOWRlMGVkZWQ0NDM3NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DBpPzdh_xDNK2b4lthob9TnOTsJbTHp8xNZgeluLuGQ',\n};\n\nlet cancelToken;\n\nexport async function fetchMovies(str, value) {\n  cancelToken = axios.CancelToken.source();\n\n  const toastId = toast.loading('Loading...');\n  const toastIdOptions = {\n    id: toastId,\n    duration: 3000,\n  };\n  try {\n    const { data } = await axios(str, { cancelToken: cancelToken.token });\n    if (value && data[value].length === 0) {\n      toast('There are no data for your request', toastIdOptions);\n    } else {\n      toast.success(`Ok. We found something!`, toastIdOptions);\n    }\n    return data;\n  } catch (error) {\n    toast.error('Something goes wrong. Reload page', toastIdOptions);\n  }\n}\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","fetchMovies","results","getCast","console","log","length","map","id","name","profile_path","character","src","noImg","width","alt","cancelToken","str","value","axios","toastId","toast","toastIdOptions","duration","token","data","accept","Authorization"],"sourceRoot":""}