{"version":3,"file":"static/js/287.86dc8f43.chunk.js","mappings":"6PAGe,SAASA,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,2BACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,WACE,wBAAKI,KACL,oCAAYM,KAAKC,KAAoB,GAAfL,GAAqB,QAC3C,gBACEM,IACEP,EACI,mCAAqCA,EACrCQ,EAENC,MAAM,MACNC,IAAKX,QAXFD,EADC,OAoBnB,C,+ICxBc,SAASa,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBC,EAAAA,EAAAA,GAAY,sBAAuB,WADxD,OACQC,EADR,OAEEH,EAAUG,EAAKC,SAFjB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,KAEI,4BAASN,IAAU,SAAC,IAAD,CAAWnB,OAAQmB,KAC9C,C,0DCNGO,E,4CAEG,SAAeJ,EAAtB,iDAAO,OAAP,oBAAO,WAA2BK,EAAKC,GAAhC,oFACLF,EAAcG,EAAAA,EAAAA,YAAAA,SAERC,EAAUC,EAAAA,GAAAA,QAAc,cACxBC,EAAiB,CACrB5B,GAAI0B,EACJG,SAAU,KANP,mBASoBJ,EAAAA,EAAAA,GAAMF,EAAK,CAAED,YAAaA,EAAYQ,QAT1D,uBASKC,EATL,EASKA,KACJP,GAAgC,IAAvBO,EAAKP,GAAOQ,QACvBL,EAAAA,EAAAA,IAAM,qCAAsCC,GAE5CD,EAAAA,GAAAA,QAAA,0BAAyCC,GAbxC,kBAeIG,GAfJ,kCAiBHJ,EAAAA,GAAAA,MAAY,oCAAqCC,GAjB9C,iFATPH,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAyB,CACvBQ,OAAQ,mBACRC,cACE,6N","sources":["components/MovieList.js","pages/Home.js","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport noImg from 'no-poster.webp';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <main>\n      <ul>\n        {movies.map(({ id, title, poster_path, vote_average }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <h3>{title}</h3>\n              <p>rating: {Math.ceil(vote_average * 10) + '%'}</p>\n              <img\n                src={\n                  poster_path\n                    ? 'https://image.tmdb.org/t/p/w500/' + poster_path\n                    : noImg\n                }\n                width=\"10%\"\n                alt={title}\n              />\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport MovieList from 'components/MovieList';\nimport { fetchMovies } from 'services/api';\n\nexport default function Home() {\n  const [trends, setTrends] = useState([]);\n\n  useEffect(() => {\n    async function fetchTrendMovie() {\n      const resp = await fetchMovies('/trending/movie/day', 'results');\n      setTrends(resp.results);\n    }\n    fetchTrendMovie();\n  }, []);\n\n  return <main>{!!trends && <MovieList movies={trends} />}</main>;\n}\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers = {\n  accept: 'application/json',\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWEyYjVkODRiMDI5YTNkNmI3ODJjYWI0MDM5NDM2MSIsInN1YiI6IjY1MDBhNjg4ZmZjOWRlMGVkZWQ0NDM3NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DBpPzdh_xDNK2b4lthob9TnOTsJbTHp8xNZgeluLuGQ',\n};\n\nlet cancelToken;\n\nexport async function fetchMovies(str, value) {\n  cancelToken = axios.CancelToken.source();\n\n  const toastId = toast.loading('Loading...');\n  const toastIdOptions = {\n    id: toastId,\n    duration: 3000,\n  };\n  try {\n    const { data } = await axios(str, { cancelToken: cancelToken.token });\n    if (value && data[value].length === 0) {\n      toast('There are no data for your request', toastIdOptions);\n    } else {\n      toast.success(`Ok. We found something!`, toastIdOptions);\n    }\n    return data;\n  } catch (error) {\n    toast.error('Something goes wrong. Reload page', toastIdOptions);\n  }\n}\n"],"names":["MovieList","movies","location","useLocation","map","id","title","poster_path","vote_average","to","state","from","Math","ceil","src","noImg","width","alt","Home","useState","trends","setTrends","useEffect","fetchMovies","resp","results","fetchTrendMovie","cancelToken","str","value","axios","toastId","toast","toastIdOptions","duration","token","data","length","accept","Authorization"],"sourceRoot":""}