{"version":3,"file":"static/js/123.e06efe18.chunk.js","mappings":"+PAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACwBC,EAAAA,EAAAA,GAAY,UAAD,OAAWN,EAAX,YAA8B,WADjE,OACQO,EADR,OAEEH,EAAWG,EAAQA,SAFrB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACR,IAECG,EAAQM,SAGTN,EAAQM,SACR,wBACGN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAxB,OACX,2BACE,wBAAKF,KACJ,uBAAI,IAAIG,KAAKD,GAAYE,mBAAmB,YAC7C,uBAAIH,MAHGF,EADE,OALS,oDAe7B,C,0DCrBGM,E,4CAEG,SAAeX,EAAtB,iDAAO,OAAP,oBAAO,WAA2BY,EAAKC,GAAhC,oFACLF,EAAcG,EAAAA,EAAAA,YAAAA,SAERC,EAAUC,EAAAA,GAAAA,QAAc,cACxBC,EAAiB,CACrBZ,GAAIU,EACJG,SAAU,KANP,mBASoBJ,EAAAA,EAAAA,GAAMF,EAAK,CAAED,YAAaA,EAAYQ,QAT1D,uBASKC,EATL,EASKA,KACJP,GAAgC,IAAvBO,EAAKP,GAAOV,QACvBa,EAAAA,EAAAA,IAAM,qCAAsCC,GAE5CD,EAAAA,GAAAA,QAAA,0BAAyCC,GAbxC,kBAeIG,GAfJ,kCAiBHJ,EAAAA,GAAAA,MAAY,oCAAqCC,GAjB9C,iFATPH,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAyB,CACvBO,OAAQ,mBACRC,cACE,6N","sources":["pages/Reviews.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/api';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function getReviews() {\n      const results = await fetchMovies(`/movie/${movieId}/reviews`, 'results');\n      setReviews(results.results);\n    }\n    getReviews();\n  }, [movieId]);\n\n  if (!reviews.length) return <p>There are no reviews yet.</p>;\n\n  return (\n    !!reviews.length && (\n      <ul>\n        {reviews.map(({ id, author, content, created_at }) => (\n          <li key={id}>\n            <h3>{author}</h3>\n            {<p>{new Date(created_at).toLocaleDateString('uk-UA')}</p>}\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    )\n  );\n}\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers = {\n  accept: 'application/json',\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWEyYjVkODRiMDI5YTNkNmI3ODJjYWI0MDM5NDM2MSIsInN1YiI6IjY1MDBhNjg4ZmZjOWRlMGVkZWQ0NDM3NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DBpPzdh_xDNK2b4lthob9TnOTsJbTHp8xNZgeluLuGQ',\n};\n\nlet cancelToken;\n\nexport async function fetchMovies(str, value) {\n  cancelToken = axios.CancelToken.source();\n\n  const toastId = toast.loading('Loading...');\n  const toastIdOptions = {\n    id: toastId,\n    duration: 3000,\n  };\n  try {\n    const { data } = await axios(str, { cancelToken: cancelToken.token });\n    if (value && data[value].length === 0) {\n      toast('There are no data for your request', toastIdOptions);\n    } else {\n      toast.success(`Ok. We found something!`, toastIdOptions);\n    }\n    return data;\n  } catch (error) {\n    toast.error('Something goes wrong. Reload page', toastIdOptions);\n  }\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovies","results","getReviews","length","map","id","author","content","created_at","Date","toLocaleDateString","cancelToken","str","value","axios","toastId","toast","toastIdOptions","duration","token","data","accept","Authorization"],"sourceRoot":""}