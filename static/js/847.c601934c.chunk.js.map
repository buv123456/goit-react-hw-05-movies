{"version":3,"file":"static/js/847.c601934c.chunk.js","mappings":"uQAIe,SAASA,IAAgB,IAAD,IACrC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,QAAM,iBAACH,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,KAa/C,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACwBC,EAAAA,EAAAA,GAAY,UAAD,OAAWT,IAD9C,OACQU,EADR,OAEEb,EAASa,GACTX,EACEW,EAAQZ,OAAOa,KAAI,qBAAGC,KAAgBC,aAAnB,IAAkCC,KAAK,OAJ9D,4CADc,uBAAC,WAAD,wBAQdC,EACD,GAAE,CAACf,KAGF,iCACE,SAAC,KAAD,CAAMgB,GAAIZ,EAAOa,QAAjB,4BADF,MAEKrB,IACD,4BACE,gBACEsB,IAAG,0CAAqCtB,EAAMuB,aAC9CC,IAAKxB,EAAMyB,SAEb,4BACE,wBAAKzB,EAAMyB,SACX,yCACgB,IACb,IAAIC,KAAK1B,EAAM2B,cAAcC,mBAAmB,aAEnD,oCAAY1B,KAAY,KACxB,oCAAY2B,KAAKC,KAA0B,GAArB9B,EAAM+B,cAAqB,QACjD,uBAAI/B,EAAMgC,eAEZ,SAAC,KAAD,CAAMZ,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,sBACA,SAAC,EAAAa,SAAD,CAAUC,UAAU,sCAApB,UACE,SAAC,KAAD,WAMX,C,0DCzCGC,E,4CAEG,SAAetB,EAAtB,iDAAO,OAAP,oBAAO,WAA2BuB,EAAKC,GAAhC,oFACLF,EAAcG,EAAAA,EAAAA,YAAAA,SAERC,EAAUC,EAAAA,GAAAA,QAAc,cACxBC,EAAiB,CACrBC,GAAIH,EACJI,SAAU,KANP,mBASoBL,EAAAA,EAAAA,GAAMF,EAAK,CAAED,YAAaA,EAAYS,QAT1D,uBASKC,EATL,EASKA,KACJR,GAAgC,IAAvBQ,EAAKR,GAAOS,QACvBN,EAAAA,EAAAA,IAAM,qCAAsCC,GAE5CD,EAAAA,GAAAA,QAAA,0BAAyCC,GAbxC,kBAeII,GAfJ,kCAiBHL,EAAAA,GAAAA,MAAY,oCAAqCC,GAjB9C,iFATPH,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAyB,CACvBS,OAAQ,mBACRC,cACE,6N","sources":["pages/MovieDetails.js","services/api.js"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/api';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const [genres, setGenres] = useState('');\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const goBack = useRef(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    async function getMovie() {\n      const results = await fetchMovies(`/movie/${movieId}`);\n      setMovie(results);\n      setGenres(\n        results.genres.map(({ name }) => name.toLowerCase()).join(', ')\n      );\n    }\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={goBack.current}>&#11164; Go back</Link>;\n      {!!movie && (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <div>\n            <h1>{movie.title}</h1>\n            <p>\n              Release date:{' '}\n              {new Date(movie.release_date).toLocaleDateString('uk-UA')}\n            </p>\n            <p>Genres: {genres}</p>{' '}\n            <p>Rating: {Math.ceil(movie.vote_average * 10) + '%'}</p>\n            <p>{movie.overview}</p>\n          </div>\n          <Link to=\"cast\">Team</Link>\n          <Link to=\"reviews\">Reviews</Link>\n          <Suspense fallback={<p>Loading...</p>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers = {\n  accept: 'application/json',\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzYWEyYjVkODRiMDI5YTNkNmI3ODJjYWI0MDM5NDM2MSIsInN1YiI6IjY1MDBhNjg4ZmZjOWRlMGVkZWQ0NDM3NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DBpPzdh_xDNK2b4lthob9TnOTsJbTHp8xNZgeluLuGQ',\n};\n\nlet cancelToken;\n\nexport async function fetchMovies(str, value) {\n  cancelToken = axios.CancelToken.source();\n\n  const toastId = toast.loading('Loading...');\n  const toastIdOptions = {\n    id: toastId,\n    duration: 3000,\n  };\n  try {\n    const { data } = await axios(str, { cancelToken: cancelToken.token });\n    if (value && data[value].length === 0) {\n      toast('There are no data for your request', toastIdOptions);\n    } else {\n      toast.success(`Ok. We found something!`, toastIdOptions);\n    }\n    return data;\n  } catch (error) {\n    toast.error('Something goes wrong. Reload page', toastIdOptions);\n  }\n}\n"],"names":["MovieDetails","useState","movie","setMovie","genres","setGenres","movieId","useParams","location","useLocation","goBack","useRef","state","from","useEffect","fetchMovies","results","map","name","toLowerCase","join","getMovie","to","current","src","poster_path","alt","title","Date","release_date","toLocaleDateString","Math","ceil","vote_average","overview","Suspense","fallback","cancelToken","str","value","axios","toastId","toast","toastIdOptions","id","duration","token","data","length","accept","Authorization"],"sourceRoot":""}